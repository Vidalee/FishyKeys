// Code generated by goa v3.21.1, DO NOT EDIT.
//
// Interceptor wrappers
//
// Command:
// $ goa gen github.com/Vidalee/FishyKeys/design

package secrets

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// wrapAuthentifiedListSecrets applies the Authentified server interceptor to
// endpoints.
func wrapListSecretsAuthentified(endpoint goa.Endpoint, i ServerInterceptors) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		info := &AuthentifiedInfo{
			service:    "secrets",
			method:     "ListSecrets",
			callType:   goa.InterceptorUnary,
			rawPayload: req,
		}
		return i.Authentified(ctx, info, endpoint)
	}
}

// wrapAuthentifiedGetSecretValue applies the Authentified server interceptor
// to endpoints.
func wrapGetSecretValueAuthentified(endpoint goa.Endpoint, i ServerInterceptors) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		info := &AuthentifiedInfo{
			service:    "secrets",
			method:     "GetSecretValue",
			callType:   goa.InterceptorUnary,
			rawPayload: req,
		}
		return i.Authentified(ctx, info, endpoint)
	}
}

// wrapAuthentifiedGetSecret applies the Authentified server interceptor to
// endpoints.
func wrapGetSecretAuthentified(endpoint goa.Endpoint, i ServerInterceptors) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		info := &AuthentifiedInfo{
			service:    "secrets",
			method:     "GetSecret",
			callType:   goa.InterceptorUnary,
			rawPayload: req,
		}
		return i.Authentified(ctx, info, endpoint)
	}
}

// wrapAuthentifiedCreateSecret applies the Authentified server interceptor to
// endpoints.
func wrapCreateSecretAuthentified(endpoint goa.Endpoint, i ServerInterceptors) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		info := &AuthentifiedInfo{
			service:    "secrets",
			method:     "CreateSecret",
			callType:   goa.InterceptorUnary,
			rawPayload: req,
		}
		return i.Authentified(ctx, info, endpoint)
	}
}
