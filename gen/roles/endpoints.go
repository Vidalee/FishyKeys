// Code generated by goa v3.21.1, DO NOT EDIT.
//
// roles endpoints
//
// Command:
// $ goa gen github.com/Vidalee/FishyKeys/design

package roles

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "roles" service endpoints.
type Endpoints struct {
	ListRoles goa.Endpoint
}

// NewEndpoints wraps the methods of the "roles" service with endpoints.
func NewEndpoints(s Service, si ServerInterceptors) *Endpoints {
	endpoints := &Endpoints{
		ListRoles: NewListRolesEndpoint(s),
	}
	endpoints.ListRoles = WrapListRolesEndpoint(endpoints.ListRoles, si)
	return endpoints
}

// Use applies the given middleware to all the "roles" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.ListRoles = m(e.ListRoles)
}

// NewListRolesEndpoint returns an endpoint function that calls the method
// "list roles" of service "roles".
func NewListRolesEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return s.ListRoles(ctx)
	}
}
