// Code generated by goa v3.21.1, DO NOT EDIT.
//
// secrets client HTTP transport
//
// Command:
// $ goa gen github.com/Vidalee/FishyKeys/design

package client

import (
	"context"
	"net/http"

	goahttp "goa.design/goa/v3/http"
	goa "goa.design/goa/v3/pkg"
)

// Client lists the secrets service endpoint HTTP clients.
type Client struct {
	// GetSecretValue Doer is the HTTP client used to make requests to the get
	// secret value endpoint.
	GetSecretValueDoer goahttp.Doer

	// GetSecret Doer is the HTTP client used to make requests to the get secret
	// endpoint.
	GetSecretDoer goahttp.Doer

	// CreateSecret Doer is the HTTP client used to make requests to the create
	// secret endpoint.
	CreateSecretDoer goahttp.Doer

	// CORS Doer is the HTTP client used to make requests to the  endpoint.
	CORSDoer goahttp.Doer

	// RestoreResponseBody controls whether the response bodies are reset after
	// decoding so they can be read again.
	RestoreResponseBody bool

	scheme  string
	host    string
	encoder func(*http.Request) goahttp.Encoder
	decoder func(*http.Response) goahttp.Decoder
}

// NewClient instantiates HTTP clients for all the secrets service servers.
func NewClient(
	scheme string,
	host string,
	doer goahttp.Doer,
	enc func(*http.Request) goahttp.Encoder,
	dec func(*http.Response) goahttp.Decoder,
	restoreBody bool,
) *Client {
	return &Client{
		GetSecretValueDoer:  doer,
		GetSecretDoer:       doer,
		CreateSecretDoer:    doer,
		CORSDoer:            doer,
		RestoreResponseBody: restoreBody,
		scheme:              scheme,
		host:                host,
		decoder:             dec,
		encoder:             enc,
	}
}

// GetSecretValue returns an endpoint that makes HTTP requests to the secrets
// service get secret value server.
func (c *Client) GetSecretValue() goa.Endpoint {
	var (
		decodeResponse = DecodeGetSecretValueResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildGetSecretValueRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetSecretValueDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("secrets", "get secret value", err)
		}
		return decodeResponse(resp)
	}
}

// GetSecret returns an endpoint that makes HTTP requests to the secrets
// service get secret server.
func (c *Client) GetSecret() goa.Endpoint {
	var (
		decodeResponse = DecodeGetSecretResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildGetSecretRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetSecretDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("secrets", "get secret", err)
		}
		return decodeResponse(resp)
	}
}

// CreateSecret returns an endpoint that makes HTTP requests to the secrets
// service create secret server.
func (c *Client) CreateSecret() goa.Endpoint {
	var (
		encodeRequest  = EncodeCreateSecretRequest(c.encoder)
		decodeResponse = DecodeCreateSecretResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildCreateSecretRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.CreateSecretDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("secrets", "create secret", err)
		}
		return decodeResponse(resp)
	}
}
