// Code generated by goa v3.21.1, DO NOT EDIT.
//
// roles HTTP server types
//
// Command:
// $ goa gen github.com/Vidalee/FishyKeys/design

package server

import (
	roles "github.com/Vidalee/FishyKeys/gen/roles"
	goa "goa.design/goa/v3/pkg"
)

// ListRolesResponseBody is the type of the "roles" service "list roles"
// endpoint HTTP response body.
type ListRolesResponseBody []*RoleResponse

// ListRolesInternalErrorResponseBody is the type of the "roles" service "list
// roles" endpoint HTTP response body for the "internal_error" error.
type ListRolesInternalErrorResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// ListRolesUnauthorizedResponseBody is the type of the "roles" service "list
// roles" endpoint HTTP response body for the "unauthorized" error.
type ListRolesUnauthorizedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// RoleResponse is used to define fields on response body types.
type RoleResponse struct {
	// Unique identifier for the role
	ID int `form:"id" json:"id" xml:"id"`
	// Name of the role
	Name string `form:"name" json:"name" xml:"name"`
	// Color associated with the role
	Color string `form:"color" json:"color" xml:"color"`
	// Is this role an admin role?
	Admin bool `form:"admin" json:"admin" xml:"admin"`
	// Role creation timestamp
	CreatedAt string `form:"created_at" json:"created_at" xml:"created_at"`
	// Role last update timestamp
	UpdatedAt string `form:"updated_at" json:"updated_at" xml:"updated_at"`
}

// NewListRolesResponseBody builds the HTTP response body from the result of
// the "list roles" endpoint of the "roles" service.
func NewListRolesResponseBody(res []*roles.Role) ListRolesResponseBody {
	body := make([]*RoleResponse, len(res))
	for i, val := range res {
		body[i] = marshalRolesRoleToRoleResponse(val)
	}
	return body
}

// NewListRolesInternalErrorResponseBody builds the HTTP response body from the
// result of the "list roles" endpoint of the "roles" service.
func NewListRolesInternalErrorResponseBody(res *goa.ServiceError) *ListRolesInternalErrorResponseBody {
	body := &ListRolesInternalErrorResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewListRolesUnauthorizedResponseBody builds the HTTP response body from the
// result of the "list roles" endpoint of the "roles" service.
func NewListRolesUnauthorizedResponseBody(res *goa.ServiceError) *ListRolesUnauthorizedResponseBody {
	body := &ListRolesUnauthorizedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}
