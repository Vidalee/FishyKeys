// Code generated by goa v3.21.1, DO NOT EDIT.
//
// key_management HTTP client CLI support package
//
// Command:
// $ goa gen github.com/Vidalee/FishyKeys/design

package client

import (
	"encoding/json"
	"fmt"

	keymanagement "github.com/Vidalee/FishyKeys/gen/key_management"
)

// BuildCreateMasterKeyPayload builds the payload for the key_management
// create_master_key endpoint from CLI flags.
func BuildCreateMasterKeyPayload(keyManagementCreateMasterKeyBody string) (*keymanagement.CreateMasterKeyPayload, error) {
	var err error
	var body CreateMasterKeyRequestBody
	{
		err = json.Unmarshal([]byte(keyManagementCreateMasterKeyBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"min_shares\": 3,\n      \"total_shares\": 5\n   }'")
		}
	}
	v := &keymanagement.CreateMasterKeyPayload{
		TotalShares: body.TotalShares,
		MinShares:   body.MinShares,
	}

	return v, nil
}

// BuildAddSharePayload builds the payload for the key_management add_share
// endpoint from CLI flags.
func BuildAddSharePayload(keyManagementAddShareBody string) (*keymanagement.AddSharePayload, error) {
	var err error
	var body AddShareRequestBody
	{
		err = json.Unmarshal([]byte(keyManagementAddShareBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"share\": \"EXAMPLEA5ZKwDn8Zotr3B+d+F+UzrcJ1Yhl2rU0\"\n   }'")
		}
	}
	v := &keymanagement.AddSharePayload{
		Share: body.Share,
	}

	return v, nil
}

// BuildDeleteSharePayload builds the payload for the key_management
// delete_share endpoint from CLI flags.
func BuildDeleteSharePayload(keyManagementDeleteShareBody string) (*keymanagement.DeleteSharePayload, error) {
	var err error
	var body DeleteShareRequestBody
	{
		err = json.Unmarshal([]byte(keyManagementDeleteShareBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"index\": 1\n   }'")
		}
	}
	v := &keymanagement.DeleteSharePayload{
		Index: body.Index,
	}

	return v, nil
}
