{
  "openapi": "3.0.3",
  "info": {
    "title": "FishyKeys API",
    "description": "The FishyKeys API for key management",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    }
  ],
  "paths": {
    "/key_management/create_master_key": {
      "post": {
        "tags": [
          "key_management"
        ],
        "summary": "create_master_key key_management",
        "description": "Create a new master key and split it into shares",
        "operationId": "key_management#create_master_key",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMasterKeyRequestBody"
              },
              "example": {
                "admin_password": "admin_password123!",
                "admin_username": "admin",
                "min_shares": 3,
                "total_shares": 5
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateMasterKeyResponseBody"
                },
                "example": {
                  "admin_username": "admin",
                  "shares": [
                    "Ratione sint et.",
                    "Magnam labore molestiae culpa iste adipisci et.",
                    "Consequatur a illum voluptas fuga voluptates sequi.",
                    "Rerum recusandae sequi quis ipsum."
                  ]
                }
              }
            }
          },
          "400": {
            "description": "invalid_parameters: Invalid parameters provided",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "key_already_exists: Conflict response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Maxime doloribus."
                },
                "example": "Quidem voluptatibus ducimus."
              }
            }
          },
          "500": {
            "description": "internal_error: Internal server error",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/key_management/share": {
      "delete": {
        "tags": [
          "key_management"
        ],
        "summary": "delete_share key_management",
        "description": "Delete a share from the key management system",
        "operationId": "key_management#delete_share",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteShareRequestBody"
              },
              "example": {
                "index": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "wrong_index: Bad Request response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Asperiores dolorem sed incidunt id."
                },
                "example": "Hic placeat maxime."
              }
            }
          },
          "404": {
            "description": "no_key_set: Not Found response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Voluptas est et corrupti culpa minus."
                },
                "example": "Est et expedita doloremque architecto commodi rerum."
              }
            }
          },
          "409": {
            "description": "key_already_unlocked: Conflict response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Voluptas aspernatur quia cupiditate sint molestiae adipisci."
                },
                "example": "Atque quas ut quidem."
              }
            }
          },
          "500": {
            "description": "internal_error: Internal Server Error response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Eos est sit dignissimos ex."
                },
                "example": "Nam nobis libero repudiandae."
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "key_management"
        ],
        "summary": "add_share key_management",
        "description": "Add a share to unlock the master key",
        "operationId": "key_management#add_share",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddShareRequestBody"
              },
              "example": {
                "share": "EXAMPLEA5ZKwDn8Zotr3B+d+F+UzrcJ1Yhl2rU0"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddShareResponseBody"
                },
                "example": {
                  "index": 267635011030857677,
                  "unlocked": false
                }
              }
            }
          },
          "400": {
            "description": "wrong_shares: Bad Request response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Nostrum minima et qui."
                },
                "example": "Ducimus eum qui est."
              }
            }
          },
          "404": {
            "description": "no_key_set: Not Found response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Ut officia earum totam esse."
                },
                "example": "Maiores at et ut occaecati harum maiores."
              }
            }
          },
          "409": {
            "description": "key_already_unlocked: Conflict response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Et atque."
                },
                "example": "Aut quis."
              }
            }
          },
          "500": {
            "description": "internal_error: Internal Server Error response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Dignissimos veniam voluptatem."
                },
                "example": "Dolorem fuga cupiditate alias quis voluptatibus dignissimos."
              }
            }
          }
        }
      }
    },
    "/key_management/status": {
      "get": {
        "tags": [
          "key_management"
        ],
        "summary": "get_key_status key_management",
        "description": "Get the current status of the master key",
        "operationId": "key_management#get_key_status",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetKeyStatusResponseBody"
                },
                "example": {
                  "current_shares": 7654723300438466742,
                  "is_locked": true,
                  "min_shares": 53511470712771686,
                  "total_shares": 2105022433223144494
                }
              }
            }
          },
          "404": {
            "description": "no_key_set: Not Found response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Repellat natus quidem impedit repudiandae accusantium."
                },
                "example": "Perspiciatis repellendus facilis est."
              }
            }
          },
          "500": {
            "description": "internal_error: Internal Server Error response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Ipsum laborum doloribus fugiat ut qui consequatur."
                },
                "example": "Rerum ab et aliquam."
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "list users users",
        "description": "List all users",
        "operationId": "users#list users",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  },
                  "example": [
                    {
                      "created_at": "Necessitatibus dicta optio.",
                      "updated_at": "Eos ducimus repudiandae et distinctio.",
                      "username": "Culpa voluptatem impedit tempore et quod."
                    },
                    {
                      "created_at": "Necessitatibus dicta optio.",
                      "updated_at": "Eos ducimus repudiandae et distinctio.",
                      "username": "Culpa voluptatem impedit tempore et quod."
                    },
                    {
                      "created_at": "Necessitatibus dicta optio.",
                      "updated_at": "Eos ducimus repudiandae et distinctio.",
                      "username": "Culpa voluptatem impedit tempore et quod."
                    },
                    {
                      "created_at": "Necessitatibus dicta optio.",
                      "updated_at": "Eos ducimus repudiandae et distinctio.",
                      "username": "Culpa voluptatem impedit tempore et quod."
                    }
                  ]
                },
                "example": [
                  {
                    "created_at": "Necessitatibus dicta optio.",
                    "updated_at": "Eos ducimus repudiandae et distinctio.",
                    "username": "Culpa voluptatem impedit tempore et quod."
                  },
                  {
                    "created_at": "Necessitatibus dicta optio.",
                    "updated_at": "Eos ducimus repudiandae et distinctio.",
                    "username": "Culpa voluptatem impedit tempore et quod."
                  },
                  {
                    "created_at": "Necessitatibus dicta optio.",
                    "updated_at": "Eos ducimus repudiandae et distinctio.",
                    "username": "Culpa voluptatem impedit tempore et quod."
                  },
                  {
                    "created_at": "Necessitatibus dicta optio.",
                    "updated_at": "Eos ducimus repudiandae et distinctio.",
                    "username": "Culpa voluptatem impedit tempore et quod."
                  }
                ]
              }
            }
          },
          "401": {
            "description": "unauthorized: Unauthorized access",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "internal_error: Internal Server Error response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Cumque amet et."
                },
                "example": "Modi at ipsum sapiente et quia sed."
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "create user users",
        "description": "Create a new user",
        "operationId": "users#create user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequestBody"
              },
              "example": {
                "password": "s3cr3t",
                "username": "alice"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserResponseBody"
                },
                "example": {
                  "id": 6752325125503319315,
                  "username": "Dignissimos libero ea nobis praesentium non."
                }
              }
            }
          },
          "400": {
            "description": "invalid_parameters: Invalid input",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "username_taken: Username already exists",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "internal_error: Internal Server Error response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "In rem dolor ab qui harum."
                },
                "example": "Eligendi quae adipisci occaecati."
              }
            }
          }
        }
      }
    },
    "/users/auth": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "auth user users",
        "description": "Authenticate a user with username and password",
        "operationId": "users#auth user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthUserRequestBody"
              },
              "example": {
                "password": "s3cr3t",
                "username": "alice"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthUserResponseBody"
                },
                "example": {
                  "token": "Eos sapiente.",
                  "username": "Dolores aperiam excepturi quisquam."
                }
              }
            }
          },
          "400": {
            "description": "invalid_parameters: Invalid input",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized: Invalid username or password",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "internal_error: Internal Server Error response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Et eveniet."
                },
                "example": "Mollitia quos."
              }
            }
          }
        }
      }
    },
    "/users/{username}": {
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "delete user users",
        "description": "Delete a user by username",
        "operationId": "users#delete user",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Username of the user to delete",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Username of the user to delete",
              "example": "alice"
            },
            "example": "alice"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "invalid_parameters: Invalid input",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized: Unauthorized access",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden: Forbidden access",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "user_not_found: User not found",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "internal_error: Internal server error",
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddShareRequestBody": {
        "type": "object",
        "properties": {
          "share": {
            "type": "string",
            "description": "One of the shares need to unlock the master key",
            "example": "EXAMPLEA5ZKwDn8Zotr3B+d+F+UzrcJ1Yhl2rU0"
          }
        },
        "example": {
          "share": "EXAMPLEA5ZKwDn8Zotr3B+d+F+UzrcJ1Yhl2rU0"
        },
        "required": [
          "share"
        ]
      },
      "AddShareResponseBody": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "description": "The index of the share added",
            "example": 2801840417263867146,
            "format": "int64"
          },
          "unlocked": {
            "type": "boolean",
            "description": "Whether the master key has been unlocked",
            "example": true
          }
        },
        "example": {
          "index": 15565662336377959,
          "unlocked": true
        },
        "required": [
          "index",
          "unlocked"
        ]
      },
      "AuthUserRequestBody": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "Password",
            "example": "s3cr3t"
          },
          "username": {
            "type": "string",
            "description": "Username",
            "example": "alice"
          }
        },
        "example": {
          "password": "s3cr3t",
          "username": "alice"
        },
        "required": [
          "username",
          "password"
        ]
      },
      "AuthUserResponseBody": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT or session token",
            "example": "Magni veniam occaecati."
          },
          "username": {
            "type": "string",
            "description": "The username of the authenticated user",
            "example": "Excepturi dolorum sed consequatur eos doloribus sit."
          }
        },
        "example": {
          "token": "Quo eveniet deleniti praesentium ex eum.",
          "username": "Rerum autem rerum omnis reiciendis."
        }
      },
      "CreateMasterKeyRequestBody": {
        "type": "object",
        "properties": {
          "admin_password": {
            "type": "string",
            "description": "Admin password for key management",
            "example": "admin_password123!"
          },
          "admin_username": {
            "type": "string",
            "description": "Admin username for key management",
            "example": "admin"
          },
          "min_shares": {
            "type": "integer",
            "description": "Minimum number of shares required to reconstruct the key",
            "example": 3,
            "format": "int64"
          },
          "total_shares": {
            "type": "integer",
            "description": "Total number of shares to create",
            "example": 5,
            "format": "int64"
          }
        },
        "example": {
          "admin_password": "admin_password123!",
          "admin_username": "admin",
          "min_shares": 3,
          "total_shares": 5
        },
        "required": [
          "total_shares",
          "min_shares",
          "admin_username",
          "admin_password"
        ]
      },
      "CreateMasterKeyResponseBody": {
        "type": "object",
        "properties": {
          "admin_username": {
            "type": "string",
            "description": "The admin user's username",
            "example": "admin"
          },
          "shares": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Sed et qui et quis eaque."
            },
            "description": "The generated key shares",
            "example": [
              "Dignissimos vel.",
              "Quis occaecati enim dolore est temporibus."
            ]
          }
        },
        "example": {
          "admin_username": "admin",
          "shares": [
            "Natus rerum optio est laborum.",
            "Vel non nam magnam beatae ipsa."
          ]
        }
      },
      "CreateUserRequestBody": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "Password (hashed or plain depending on implementation)",
            "example": "s3cr3t"
          },
          "username": {
            "type": "string",
            "description": "Username of the new user",
            "example": "alice",
            "minLength": 3
          }
        },
        "example": {
          "password": "s3cr3t",
          "username": "alice"
        },
        "required": [
          "username",
          "password"
        ]
      },
      "CreateUserResponseBody": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the user",
            "example": 3875426494026184978,
            "format": "int64"
          },
          "username": {
            "type": "string",
            "description": "The username of the created user",
            "example": "Sed dolor itaque."
          }
        },
        "example": {
          "id": 5856351231608225095,
          "username": "Est autem."
        }
      },
      "DeleteShareRequestBody": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "description": "The index of the share to delete",
            "example": 1,
            "format": "int64"
          }
        },
        "example": {
          "index": 1
        },
        "required": [
          "index"
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "fault": {
            "type": "boolean",
            "description": "Is the error a server-side fault?",
            "example": false
          },
          "id": {
            "type": "string",
            "description": "ID is a unique identifier for this particular occurrence of the problem.",
            "example": "123abc"
          },
          "message": {
            "type": "string",
            "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
            "example": "parameter 'p' must be an integer"
          },
          "name": {
            "type": "string",
            "description": "Name is the name of this class of errors.",
            "example": "bad_request"
          },
          "temporary": {
            "type": "boolean",
            "description": "Is the error temporary?",
            "example": true
          },
          "timeout": {
            "type": "boolean",
            "description": "Is the error a timeout?",
            "example": true
          }
        },
        "description": "Invalid parameters provided",
        "example": {
          "fault": true,
          "id": "123abc",
          "message": "parameter 'p' must be an integer",
          "name": "bad_request",
          "temporary": true,
          "timeout": true
        },
        "required": [
          "name",
          "id",
          "message",
          "temporary",
          "timeout",
          "fault"
        ]
      },
      "GetKeyStatusResponseBody": {
        "type": "object",
        "properties": {
          "current_shares": {
            "type": "integer",
            "description": "Number of shares currently held",
            "example": 459929980538903974,
            "format": "int64"
          },
          "is_locked": {
            "type": "boolean",
            "description": "Whether the key is currently locked",
            "example": true
          },
          "min_shares": {
            "type": "integer",
            "description": "Minimum number of shares required",
            "example": 8586128447272736307,
            "format": "int64"
          },
          "total_shares": {
            "type": "integer",
            "description": "Total number of shares",
            "example": 8517354054290568962,
            "format": "int64"
          }
        },
        "example": {
          "current_shares": 776755407977139347,
          "is_locked": true,
          "min_shares": 7572532649990936888,
          "total_shares": 921494360688620238
        },
        "required": [
          "is_locked",
          "current_shares",
          "min_shares",
          "total_shares"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "description": "User creation timestamp",
            "example": "Eligendi consequatur voluptas."
          },
          "updated_at": {
            "type": "string",
            "description": "User last update timestamp",
            "example": "Ipsam eos ut repellendus sunt."
          },
          "username": {
            "type": "string",
            "description": "The username",
            "example": "Eveniet cupiditate eos et nisi eos beatae."
          }
        },
        "example": {
          "created_at": "Voluptatem ad amet sint est.",
          "updated_at": "Aut quae vel occaecati voluptate dolorem.",
          "username": "Qui sint sapiente architecto."
        },
        "required": [
          "username",
          "created_at",
          "updated_at"
        ]
      }
    }
  },
  "tags": [
    {
      "name": "key_management",
      "description": "The FishyKeys server handles master key operations"
    },
    {
      "name": "users",
      "description": "User service manages user accounts and authentication"
    }
  ]
}