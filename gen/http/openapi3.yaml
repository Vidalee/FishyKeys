openapi: 3.0.3
info:
    title: FishyKeys API
    description: The FishyKeys API for key management
    version: "1.0"
servers:
    - url: http://localhost:8080
paths:
    /key_management/create_master_key:
        post:
            tags:
                - key_management
            summary: create_master_key key_management
            description: Create a new master key and split it into shares
            operationId: key_management#create_master_key
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateMasterKeyRequestBody'
                        example:
                            admin_password: admin_password123!
                            admin_username: admin
                            min_shares: 3
                            total_shares: 5
            responses:
                "201":
                    description: Created response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateMasterKeyResponseBody'
                            example:
                                admin_username: admin
                                shares:
                                    - EXAMPLEA5ZKwDn8Zotr3B+d+F+UzrcJ1Yhl2rU0
                                    - EXAMPLEB5ZKwDn8Zotr3B+d+F+UzrcJ1Yhl2rU1
                                    - EXAMPLEC5ZKwDn8Zotr3B+d+F+UzrcJ1Yhl2rU2
                "400":
                    description: 'invalid_parameters: Invalid parameters provided'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: 'key_already_exists: A master key already exists'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: 'internal_error: Internal server error'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
    /key_management/share:
        delete:
            tags:
                - key_management
            summary: delete_share key_management
            description: Delete a share from the key management system
            operationId: key_management#delete_share
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeleteShareRequestBody'
                        example:
                            index: 1
            responses:
                "200":
                    description: OK response.
                "400":
                    description: 'wrong_index: The index provided does not match any share'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: 'no_key_set: No master key has been set'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: 'key_already_unlocked: The master key is already unlocked'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: 'internal_error: Internal server error'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - key_management
            summary: add_share key_management
            description: Add a share to unlock the master key
            operationId: key_management#add_share
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddShareRequestBody'
                        example:
                            share: EXAMPLEA5ZKwDn8Zotr3B+d+F+UzrcJ1Yhl2rU0
            responses:
                "201":
                    description: Created response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddShareResponseBody'
                            example:
                              index: 4689996537036155328
                              unlocked: true
                "400":
                    description: 'wrong_shares: The key recombined from the shares is not the correct key'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: 'no_key_set: No master key has been set'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: 'key_already_unlocked: The master key is already unlocked'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: 'internal_error: Internal server error'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
    /key_management/status:
        get:
            tags:
                - key_management
            summary: get_key_status key_management
            description: Get the current status of the master key
            operationId: key_management#get_key_status
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetKeyStatusResponseBody'
                            example:
                              current_shares: 382474295782307311
                                is_locked: true
                              min_shares: 5117056083765439164
                              total_shares: 908568140735950639
                "404":
                    description: 'no_key_set: No master key has been set'
                    content:
                      application/vnd.goa.error:
                        schema:
                          $ref: '#/components/schemas/Error'
                "500":
                  description: 'internal_error: Internal server error'
                  content:
                    application/vnd.goa.error:
                      schema:
                        $ref: '#/components/schemas/Error'
    /roles:
      get:
        tags:
          - roles
        summary: list roles roles
        description: List all roles
        operationId: roles#list roles
        responses:
          "200":
            description: OK response.
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Role'
                  example:
                    - admin: true
                      color: '#FF5733'
                      created_at: "2025-06-30T12:00:00Z"
                      id: 1
                      name: admin
                      updated_at: "2025-06-30T15:00:00Z"
                    - admin: true
                      color: '#FF5733'
                      created_at: "2025-06-30T12:00:00Z"
                      id: 1
                      name: admin
                      updated_at: "2025-06-30T15:00:00Z"
                example:
                  - admin: true
                    color: '#FF5733'
                    created_at: "2025-06-30T12:00:00Z"
                    id: 1
                    name: admin
                    updated_at: "2025-06-30T15:00:00Z"
                  - admin: true
                    color: '#FF5733'
                    created_at: "2025-06-30T12:00:00Z"
                    id: 1
                    name: admin
                    updated_at: "2025-06-30T15:00:00Z"
                  - admin: true
                    color: '#FF5733'
                    created_at: "2025-06-30T12:00:00Z"
                    id: 1
                    name: admin
                    updated_at: "2025-06-30T15:00:00Z"
          "401":
            description: 'unauthorized: Unauthorized access'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: 'internal_error: Internal server error'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
    /secrets:
      get:
        tags:
          - secrets
        summary: list secrets secrets
        description: Retrieve all secrets you have access to
        operationId: secrets#list secrets
        responses:
          "200":
            description: OK response.
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/SecretInfoSummary'
                  description: List of secrets you have access to
                  example:
                    - created_at: "2025-06-30T12:00:00Z"
                      owner:
                        created_at: "2025-06-30T12:00:00Z"
                        id: 1
                        updated_at: "2025-06-30T15:00:00Z"
                        username: alice
                      path: customers/google/api_key
                      updated_at: "2025-06-30T15:00:00Z"
                    - created_at: "2025-06-30T12:00:00Z"
                      owner:
                        created_at: "2025-06-30T12:00:00Z"
                        id: 1
                        updated_at: "2025-06-30T15:00:00Z"
                        username: alice
                      path: customers/google/api_key
                      updated_at: "2025-06-30T15:00:00Z"
                    - created_at: "2025-06-30T12:00:00Z"
                      owner:
                        created_at: "2025-06-30T12:00:00Z"
                        id: 1
                        updated_at: "2025-06-30T15:00:00Z"
                        username: alice
                      path: customers/google/api_key
                      updated_at: "2025-06-30T15:00:00Z"
                    - created_at: "2025-06-30T12:00:00Z"
                      owner:
                        created_at: "2025-06-30T12:00:00Z"
                        id: 1
                        updated_at: "2025-06-30T15:00:00Z"
                        username: alice
                      path: customers/google/api_key
                      updated_at: "2025-06-30T15:00:00Z"
                example:
                  - created_at: "2025-06-30T12:00:00Z"
                    owner:
                      created_at: "2025-06-30T12:00:00Z"
                      id: 1
                      updated_at: "2025-06-30T15:00:00Z"
                      username: alice
                    path: customers/google/api_key
                    updated_at: "2025-06-30T15:00:00Z"
                  - created_at: "2025-06-30T12:00:00Z"
                    owner:
                      created_at: "2025-06-30T12:00:00Z"
                      id: 1
                      updated_at: "2025-06-30T15:00:00Z"
                      username: alice
                    path: customers/google/api_key
                    updated_at: "2025-06-30T15:00:00Z"
                  - created_at: "2025-06-30T12:00:00Z"
                    owner:
                      created_at: "2025-06-30T12:00:00Z"
                      id: 1
                      updated_at: "2025-06-30T15:00:00Z"
                      username: alice
                    path: customers/google/api_key
                    updated_at: "2025-06-30T15:00:00Z"
                  - created_at: "2025-06-30T12:00:00Z"
                    owner:
                      created_at: "2025-06-30T12:00:00Z"
                      id: 1
                      updated_at: "2025-06-30T15:00:00Z"
                      username: alice
                    path: customers/google/api_key
                    updated_at: "2025-06-30T15:00:00Z"
          "401":
            description: 'unauthorized: Unauthorized access'
            content:
              application/vnd.goa.error:
                schema:
                  $ref: '#/components/schemas/Error'
          "403":
            description: 'forbidden: Forbidden access'
            content:
              application/vnd.goa.error:
                schema:
                  $ref: '#/components/schemas/Error'
          "500":
            description: 'internal_error: Internal server error'
            content:
              application/vnd.goa.error:
                schema:
                  $ref: '#/components/schemas/Error'
        post:
            tags:
                - secrets
            summary: create secret secrets
            description: Create a secret
            operationId: secrets#create secret
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateSecretRequestBody'
                        example:
                            authorized_roles:
                                - 1
                                - 2
                            authorized_users:
                              - 1
                              - 2
                              - 3
                            path: L2N1c3RvbWVycy9nb29nbGUvYXBpX2tleQ==
                            value: SECRET_API_KEY123
            responses:
                "201":
                    description: Created response.
                "400":
                    description: 'invalid_parameters: Invalid token path'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: 'unauthorized: Unauthorized access'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: 'forbidden: Forbidden access'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: 'internal_error: Internal server error'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
    /secrets/{path}:
        get:
            tags:
                - secrets
            summary: get secret secrets
            description: Retrieve a secret's information
            operationId: secrets#get secret
            parameters:
                - name: path
                  in: path
                  description: Base64 encoded secret's path
                  required: true
                  schema:
                    type: string
                    description: Base64 encoded secret's path
                    example: L2N1c3RvbWVycy9nb29nbGUvYXBpX2tleQ==
                    minLength: 2
                  example: L2N1c3RvbWVycy9nb29nbGUvYXBpX2tleQ==
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SecretInfo'
                            example:
                              authorized_roles:
                                - admin: false
                                  color: '#FF5733'
                                  created_at: "2025-06-30T12:00:00Z"
                                  id: 1
                                  name: admin
                                  updated_at: "2025-06-30T15:00:00Z"
                                - admin: false
                                  color: '#FF5733'
                                  created_at: "2025-06-30T12:00:00Z"
                                  id: 1
                                  name: admin
                                  updated_at: "2025-06-30T15:00:00Z"
                                - admin: false
                                  color: '#FF5733'
                                  created_at: "2025-06-30T12:00:00Z"
                                  id: 1
                                  name: admin
                                  updated_at: "2025-06-30T15:00:00Z"
                              authorized_users:
                                    - created_at: "2025-06-30T12:00:00Z"
                                      id: 1
                                      updated_at: "2025-06-30T15:00:00Z"
                                      username: alice
                                    - created_at: "2025-06-30T12:00:00Z"
                                      id: 1
                                      updated_at: "2025-06-30T15:00:00Z"
                                      username: alice
                                created_at: "2025-06-30T12:00:00Z"
                                owner:
                                    created_at: "2025-06-30T12:00:00Z"
                                    id: 1
                                    updated_at: "2025-06-30T15:00:00Z"
                                    username: alice
                                path: customers/google/api_key
                                updated_at: "2025-06-30T15:00:00Z"
                "400":
                    description: 'invalid_parameters: Invalid token path'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: 'unauthorized: Unauthorized access'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: 'forbidden: Forbidden access'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: 'secret_not_found: Secret not found'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: 'internal_error: Internal server error'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
    /secrets/{path}/value:
        get:
            tags:
                - secrets
            summary: get secret value secrets
            description: Retrieve a secret value
            operationId: secrets#get secret value
            parameters:
                - name: path
                  in: path
                  description: Base64 encoded secret's path
                  required: true
                  schema:
                    type: string
                    description: Base64 encoded secret's path
                    example: L2N1c3RvbWVycy9nb29nbGUvYXBpX2tleQ==
                    minLength: 2
                  example: L2N1c3RvbWVycy9nb29nbGUvYXBpX2tleQ==
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSecretValueResponseBody'
                            example:
                                path: customers/google/api_key
                                value: SECRET_API_KEY
                "400":
                    description: 'invalid_parameters: Invalid token path'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: 'unauthorized: Unauthorized access'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: 'forbidden: Forbidden access'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: 'secret_not_found: Secret not found'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: 'internal_error: Internal server error'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
    /users:
        get:
            tags:
                - users
            summary: list users users
            description: List all users
            operationId: users#list users
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/User'
                                example:
                                    - created_at: "2025-06-30T12:00:00Z"
                                      id: 1
                                      updated_at: "2025-06-30T15:00:00Z"
                                      username: alice
                                    - created_at: "2025-06-30T12:00:00Z"
                                      id: 1
                                      updated_at: "2025-06-30T15:00:00Z"
                                      username: alice
                            example:
                              - created_at: "2025-06-30T12:00:00Z"
                                id: 1
                                updated_at: "2025-06-30T15:00:00Z"
                                username: alice
                                - created_at: "2025-06-30T12:00:00Z"
                                  id: 1
                                  updated_at: "2025-06-30T15:00:00Z"
                                  username: alice
                                - created_at: "2025-06-30T12:00:00Z"
                                  id: 1
                                  updated_at: "2025-06-30T15:00:00Z"
                                  username: alice
                "401":
                    description: 'unauthorized: Unauthorized access'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: 'internal_error: Internal server error'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - users
            summary: create user users
            description: Create a new user
            operationId: users#create user
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUserRequestBody'
                        example:
                            password: s3cr3t
                            username: alice
            responses:
                "201":
                    description: Created response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserResponseBody'
                            example:
                                id: 2
                                username: alice
                "400":
                    description: 'invalid_parameters: Invalid input'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: 'username_taken: Username already exists'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: 'internal_error: Internal server error'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
    /users/{username}:
        delete:
            tags:
                - users
            summary: delete user users
            description: Delete a user by username
            operationId: users#delete user
            parameters:
                - name: username
                  in: path
                  description: Username of the user to delete
                  required: true
                  schema:
                    type: string
                    description: Username of the user to delete
                    example: alice
                  example: alice
            responses:
                "200":
                    description: OK response.
                "400":
                    description: 'invalid_parameters: Invalid input'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: 'unauthorized: Unauthorized access'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: 'forbidden: Forbidden access'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: 'user_not_found: User not found'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: 'internal_error: Internal server error'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
    /users/auth:
        post:
            tags:
                - users
            summary: auth user users
            description: Authenticate a user with username and password
            operationId: users#auth user
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AuthUserRequestBody'
                        example:
                            password: s3cr3t
                            username: alice
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AuthUserResponseBody'
                            example:
                                token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                                username: alice
                "400":
                    description: 'invalid_parameters: Invalid input'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: 'unauthorized: Invalid username or password'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: 'internal_error: Internal server error'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
components:
    schemas:
        AddShareRequestBody:
            type: object
            properties:
                share:
                    type: string
                    description: One of the shares need to unlock the master key
                    example: EXAMPLEA5ZKwDn8Zotr3B+d+F+UzrcJ1Yhl2rU0
            example:
                share: EXAMPLEA5ZKwDn8Zotr3B+d+F+UzrcJ1Yhl2rU0
            required:
                - share
        AddShareResponseBody:
            type: object
            properties:
                index:
                    type: integer
                    description: The index of the share added
                    example: 2804251276007726417
                    format: int64
                unlocked:
                    type: boolean
                    description: Whether the master key has been unlocked
                    example: true
            example:
              index: 8405355850990433405
              unlocked: false
            required:
                - index
                - unlocked
        AuthUserRequestBody:
            type: object
            properties:
                password:
                    type: string
                    description: Password
                    example: s3cr3t
                username:
                    type: string
                    description: Username
                    example: alice
            example:
                password: s3cr3t
                username: alice
            required:
                - username
                - password
        AuthUserResponseBody:
            type: object
            properties:
                token:
                    type: string
                    description: JWT or session token
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                username:
                    type: string
                    description: The username of the authenticated user
                    example: alice
            example:
                token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                username: alice
        CreateMasterKeyRequestBody:
            type: object
            properties:
                admin_password:
                    type: string
                    description: Admin password for key management
                    example: admin_password123!
                admin_username:
                    type: string
                    description: Admin username for key management
                    example: admin
                min_shares:
                    type: integer
                    description: Minimum number of shares required to reconstruct the key
                    example: 3
                    format: int64
                total_shares:
                    type: integer
                    description: Total number of shares to create
                    example: 5
                    format: int64
            example:
                admin_password: admin_password123!
                admin_username: admin
                min_shares: 3
                total_shares: 5
            required:
                - total_shares
                - min_shares
                - admin_username
                - admin_password
        CreateMasterKeyResponseBody:
            type: object
            properties:
                admin_username:
                    type: string
                    description: The admin user's username
                    example: admin
                shares:
                    type: array
                    items:
                        type: string
                        example: Reiciendis distinctio sint ipsa debitis voluptatum.
                    description: The generated key shares
                    example:
                        - EXAMPLEA5ZKwDn8Zotr3B+d+F+UzrcJ1Yhl2rU0
                        - EXAMPLEB5ZKwDn8Zotr3B+d+F+UzrcJ1Yhl2rU1
                        - EXAMPLEC5ZKwDn8Zotr3B+d+F+UzrcJ1Yhl2rU2
            example:
                admin_username: admin
                shares:
                    - EXAMPLEA5ZKwDn8Zotr3B+d+F+UzrcJ1Yhl2rU0
                    - EXAMPLEB5ZKwDn8Zotr3B+d+F+UzrcJ1Yhl2rU1
                    - EXAMPLEC5ZKwDn8Zotr3B+d+F+UzrcJ1Yhl2rU2
        CreateSecretRequestBody:
            type: object
            properties:
              authorized_roles:
                    type: array
                    items:
                        type: integer
                        example: 4605138811280809006
                        format: int64
                    description: Role IDs authorized to access the secret
                    example:
                        - 1
                        - 2
              authorized_users:
                    type: array
                    items:
                        type: integer
                        example: 7032392647712366511
                        format: int64
                    description: Users IDs authorized to access the secret
                    example:
                        - 1
                        - 2
                        - 3
                path:
                    type: string
                    description: Base64 encoded secret's path
                    example: L2N1c3RvbWVycy9nb29nbGUvYXBpX2tleQ==
                    minLength: 2
                value:
                    type: string
                    description: The secret value
                    example: SECRET_API_KEY123
                    minLength: 1
            example:
                authorized_roles:
                    - 1
                    - 2
                authorized_users:
                  - 1
                  - 2
                  - 3
                path: L2N1c3RvbWVycy9nb29nbGUvYXBpX2tleQ==
                value: SECRET_API_KEY123
            required:
                - path
                - value
                - authorized_users
                - authorized_roles
        CreateUserRequestBody:
            type: object
            properties:
                password:
                    type: string
                    description: Password (hashed or plain depending on implementation)
                    example: s3cr3t
                username:
                    type: string
                    description: Username of the new user
                    example: alice
                    minLength: 3
            example:
                password: s3cr3t
                username: alice
            required:
                - username
                - password
        CreateUserResponseBody:
            type: object
            properties:
                id:
                    type: integer
                    description: Unique identifier for the user
                    example: 2
                    format: int64
                username:
                    type: string
                    description: The username of the created user
                    example: alice
            example:
                id: 2
                username: alice
        DeleteShareRequestBody:
            type: object
            properties:
                index:
                    type: integer
                    description: The index of the share to delete
                    example: 1
                    format: int64
            example:
                index: 1
            required:
                - index
        Error:
            type: object
            properties:
                fault:
                    type: boolean
                    description: Is the error a server-side fault?
                    example: false
                id:
                    type: string
                    description: ID is a unique identifier for this particular occurrence of the problem.
                    example: 123abc
                message:
                    type: string
                    description: Message is a human-readable explanation specific to this occurrence of the problem.
                    example: parameter 'p' must be an integer
                name:
                    type: string
                    description: Name is the name of this class of errors.
                    example: bad_request
                temporary:
                    type: boolean
                    description: Is the error temporary?
                    example: false
                timeout:
                    type: boolean
                    description: Is the error a timeout?
                    example: true
            description: Invalid parameters provided
            example:
                fault: true
                id: 123abc
                message: parameter 'p' must be an integer
                name: bad_request
                temporary: false
                timeout: false
            required:
                - name
                - id
                - message
                - temporary
                - timeout
                - fault
        GetKeyStatusResponseBody:
            type: object
            properties:
                current_shares:
                    type: integer
                    description: Number of shares currently held
                    example: 5249063332152861252
                    format: int64
                is_locked:
                    type: boolean
                    description: Whether the key is currently locked
                    example: false
                min_shares:
                    type: integer
                    description: Minimum number of shares required
                    example: 4468759149788095379
                    format: int64
                total_shares:
                    type: integer
                    description: Total number of shares
                    example: 4833138617745985457
                    format: int64
            example:
              current_shares: 1741392137154913574
              is_locked: false
              min_shares: 1081155919994856112
              total_shares: 261592986439172219
            required:
                - is_locked
                - current_shares
                - min_shares
                - total_shares
        GetSecretValueResponseBody:
            type: object
            properties:
                path:
                    type: string
                    description: The original path of the secret
                    example: customers/google/api_key
                value:
                    type: string
                    description: The secret value
                    example: SECRET_API_KEY
            example:
                path: customers/google/api_key
                value: SECRET_API_KEY
        Role:
            type: object
            properties:
              admin:
                type: boolean
                description: Is this role an admin role?
                default: false
                example: false
              color:
                type: string
                description: Color associated with the role
                example: '#FF5733'
              created_at:
                type: string
                description: Role creation timestamp
                example: "2025-06-30T12:00:00Z"
                id:
                    type: integer
                    description: Unique identifier for the role
                    example: 1
                    format: int64
                name:
                    type: string
                    description: Name of the role
                    example: admin
              updated_at:
                type: string
                description: Role last update timestamp
                example: "2025-06-30T15:00:00Z"
            example:
              admin: true
              color: '#FF5733'
              created_at: "2025-06-30T12:00:00Z"
                id: 1
                name: admin
              updated_at: "2025-06-30T15:00:00Z"
            required:
                - id
                - name
                - color
                - admin
                - created_at
                - updated_at
        SecretInfo:
            type: object
            properties:
                authorized_roles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Role'
                    description: Roles authorized to access the secret
                    example:
                      - admin: false
                        color: '#FF5733'
                        created_at: "2025-06-30T12:00:00Z"
                        id: 1
                        name: admin
                        updated_at: "2025-06-30T15:00:00Z"
                      - admin: false
                        color: '#FF5733'
                        created_at: "2025-06-30T12:00:00Z"
                        id: 1
                          name: admin
                        updated_at: "2025-06-30T15:00:00Z"
                authorized_users:
                  type: array
                  items:
                    $ref: '#/components/schemas/User'
                  description: Members authorized to access the secret
                  example:
                    - created_at: "2025-06-30T12:00:00Z"
                      id: 1
                      updated_at: "2025-06-30T15:00:00Z"
                      username: alice
                    - created_at: "2025-06-30T12:00:00Z"
                      id: 1
                      updated_at: "2025-06-30T15:00:00Z"
                      username: alice
                created_at:
                    type: string
                    description: Creation timestamp of the secret
                    example: "2025-06-30T12:00:00Z"
                owner:
                    $ref: '#/components/schemas/User'
                path:
                    type: string
                    description: The original path of the secret
                    example: customers/google/api_key
                updated_at:
                    type: string
                    description: Last update timestamp of the secret
                    example: "2025-06-30T15:00:00Z"
            example:
                authorized_roles:
                  - admin: false
                    color: '#FF5733'
                    created_at: "2025-06-30T12:00:00Z"
                    id: 1
                      name: admin
                    updated_at: "2025-06-30T15:00:00Z"
                  - admin: false
                    color: '#FF5733'
                    created_at: "2025-06-30T12:00:00Z"
                    id: 1
                    name: admin
                    updated_at: "2025-06-30T15:00:00Z"
                authorized_users:
                  - created_at: "2025-06-30T12:00:00Z"
                    id: 1
                    updated_at: "2025-06-30T15:00:00Z"
                    username: alice
                  - created_at: "2025-06-30T12:00:00Z"
                    id: 1
                    updated_at: "2025-06-30T15:00:00Z"
                    username: alice
                created_at: "2025-06-30T12:00:00Z"
                owner:
                  created_at: "2025-06-30T12:00:00Z"
                    id: 1
                    updated_at: "2025-06-30T15:00:00Z"
                    username: alice
                path: customers/google/api_key
                updated_at: "2025-06-30T15:00:00Z"
            required:
              - path
              - owner
              - authorized_users
              - authorized_roles
              - created_at
              - updated_at
        SecretInfoSummary:
          type: object
          properties:
            created_at:
              type: string
              description: Creation timestamp of the secret
              example: "2025-06-30T12:00:00Z"
            owner:
              $ref: '#/components/schemas/User'
            path:
              type: string
              description: The original path of the secret
              example: customers/google/api_key
            updated_at:
              type: string
              description: Last update timestamp of the secret
              example: "2025-06-30T15:00:00Z"
          example:
                created_at: "2025-06-30T12:00:00Z"
                owner:
                    created_at: "2025-06-30T12:00:00Z"
                    id: 1
                    updated_at: "2025-06-30T15:00:00Z"
                    username: alice
                path: customers/google/api_key
                updated_at: "2025-06-30T15:00:00Z"
            required:
                - path
                - owner
                - created_at
                - updated_at
        User:
            type: object
            properties:
                created_at:
                    type: string
                    description: User creation timestamp
                    example: "2025-06-30T12:00:00Z"
                id:
                  type: integer
                  description: Unique identifier for the user
                  example: 1
                  format: int64
                updated_at:
                    type: string
                    description: User last update timestamp
                    example: "2025-06-30T15:00:00Z"
                username:
                    type: string
                    description: The username
                    example: alice
                    minLength: 3
            example:
                created_at: "2025-06-30T12:00:00Z"
                id: 1
                updated_at: "2025-06-30T15:00:00Z"
                username: alice
            required:
              - id
                - username
                - created_at
                - updated_at
tags:
    - name: key_management
      description: The FishyKeys server handles master key operations
    - name: roles
      description: Roles service manages roles
    - name: secrets
      description: User service manages user accounts and authentication
    - name: users
      description: User service manages user accounts and authentication
