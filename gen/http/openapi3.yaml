openapi: 3.0.3
info:
    title: FishyKeys API
    description: The FishyKeys API for key management
    version: "1.0"
servers:
    - url: http://localhost:8080
paths:
    /key_management/create_master_key:
        post:
            tags:
                - key_management
            summary: create_master_key key_management
            description: Create a new master key and split it into shares
            operationId: key_management#create_master_key
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateMasterKeyRequestBody'
                        example:
                            admin_password: admin_password123!
                            admin_username: admin
                            min_shares: 3
                            total_shares: 5
            responses:
                "201":
                    description: Created response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateMasterKeyResponseBody'
                            example:
                                admin_username: admin
                                shares:
                                    - Repudiandae blanditiis id cupiditate unde eos.
                                    - Sit ratione.
                                    - Et ut magnam labore molestiae.
                "400":
                    description: 'invalid_parameters: Invalid parameters provided'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: 'key_already_exists: Conflict response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Dolorem sed incidunt id dolore sed.
                            example: Natus voluptas aut sunt dolorem et.
                "500":
                    description: 'internal_error: Internal server error'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
    /key_management/share:
        delete:
            tags:
                - key_management
            summary: delete_share key_management
            description: Delete a share from the key management system
            operationId: key_management#delete_share
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeleteShareRequestBody'
                        example:
                            index: 1
            responses:
                "200":
                    description: OK response.
                "400":
                    description: 'wrong_index: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Commodi rerum quo excepturi.
                            example: Ab voluptatibus tenetur et totam quam velit.
                "404":
                    description: 'no_key_set: Not Found response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Asperiores architecto similique quia illo eos quasi.
                            example: Neque dolores porro est cupiditate.
                "409":
                    description: 'key_already_unlocked: Conflict response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Doloremque possimus.
                            example: Non in et modi in rerum.
                "500":
                    description: 'internal_error: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Dolorem fuga cupiditate alias quis voluptatibus dignissimos.
                            example: Quidem amet laborum.
        post:
            tags:
                - key_management
            summary: add_share key_management
            description: Add a share to unlock the master key
            operationId: key_management#add_share
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddShareRequestBody'
                        example:
                            share: EXAMPLEA5ZKwDn8Zotr3B+d+F+UzrcJ1Yhl2rU0
            responses:
                "201":
                    description: Created response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddShareResponseBody'
                            example:
                                index: 6028725072138950673
                                unlocked: true
                "400":
                    description: 'wrong_shares: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Officiis magni veniam.
                            example: Consectetur repudiandae qui.
                "404":
                    description: 'no_key_set: Not Found response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Facilis est.
                            example: Omnis consequatur et numquam.
                "409":
                    description: 'key_already_unlocked: Conflict response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Et quo eveniet deleniti praesentium.
                            example: Eveniet exercitationem dicta.
                "500":
                    description: 'internal_error: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Aspernatur rerum autem rerum omnis.
                            example: Incidunt accusantium asperiores.
    /key_management/status:
        get:
            tags:
                - key_management
            summary: get_key_status key_management
            description: Get the current status of the master key
            operationId: key_management#get_key_status
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetKeyStatusResponseBody'
                            example:
                                current_shares: 2121356811434194624
                                is_locked: false
                                min_shares: 1735927297062114850
                                total_shares: 2782797484439169934
                "404":
                    description: 'no_key_set: Not Found response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Rem dolor ab qui harum distinctio facilis.
                            example: Quidem aut asperiores eum ullam soluta dicta.
                "500":
                    description: 'internal_error: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Amet et aut excepturi dolorum.
                            example: Sapiente nobis laudantium qui amet rerum.
    /secrets/${path}:
        get:
            tags:
                - secrets
            summary: get secret secrets
            description: Retrieve a secret's information
            operationId: secrets#get secret
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetSecretValueRequestBody'
                        example:
                            path: L2N1c3RvbWVycy9nb29nbGUvYXBpX2tleQ==
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SecretInfo'
                            example:
                                authorized_members:
                                    - created_at: Voluptas numquam aut et sed voluptatum.
                                      updated_at: Reprehenderit est et culpa voluptatem.
                                      username: Sunt eos in ut.
                                    - created_at: Voluptas numquam aut et sed voluptatum.
                                      updated_at: Reprehenderit est et culpa voluptatem.
                                      username: Sunt eos in ut.
                                    - created_at: Voluptas numquam aut et sed voluptatum.
                                      updated_at: Reprehenderit est et culpa voluptatem.
                                      username: Sunt eos in ut.
                                    - created_at: Voluptas numquam aut et sed voluptatum.
                                      updated_at: Reprehenderit est et culpa voluptatem.
                                      username: Sunt eos in ut.
                                authorized_roles:
                                    - id: 1
                                      name: admin
                                    - id: 1
                                      name: admin
                                created_at: "2025-06-30T12:00:00Z"
                                owner:
                                    created_at: Voluptas numquam aut et sed voluptatum.
                                    updated_at: Reprehenderit est et culpa voluptatem.
                                    username: Sunt eos in ut.
                                path: customers/google/api_key
                                updated_at: "2025-06-30T15:00:00Z"
                "400":
                    description: 'invalid_parameters: Invalid token path'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: 'unauthorized: Unauthorized access'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: 'secret_not_found: Token not found'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: 'internal_error: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Maiores at et ut occaecati harum maiores.
                            example: Molestiae rem quia vitae quasi sit quia.
    /secrets/${path}/value:
        get:
            tags:
                - secrets
            summary: get secret value secrets
            description: Retrieve a secret value
            operationId: secrets#get secret value
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetSecretValueRequestBody'
                        example:
                            path: L2N1c3RvbWVycy9nb29nbGUvYXBpX2tleQ==
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSecretValueResponseBody'
                            example:
                                path: customers/google/api_key
                                value: SECRET_API_KEY
                "400":
                    description: 'invalid_parameters: Invalid token path'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: 'unauthorized: Unauthorized access'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: 'secret_not_found: Token not found'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: 'internal_error: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Ducimus eum qui est.
                            example: Id dolor sed.
    /users:
        get:
            tags:
                - users
            summary: list users users
            description: List all users
            operationId: users#list users
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/User'
                                example:
                                    - created_at: Dolores aperiam excepturi quisquam.
                                      updated_at: Eos sapiente.
                                      username: Voluptatem voluptatibus qui.
                                    - created_at: Dolores aperiam excepturi quisquam.
                                      updated_at: Eos sapiente.
                                      username: Voluptatem voluptatibus qui.
                            example:
                                - created_at: Dolores aperiam excepturi quisquam.
                                  updated_at: Eos sapiente.
                                  username: Voluptatem voluptatibus qui.
                                - created_at: Dolores aperiam excepturi quisquam.
                                  updated_at: Eos sapiente.
                                  username: Voluptatem voluptatibus qui.
                                - created_at: Dolores aperiam excepturi quisquam.
                                  updated_at: Eos sapiente.
                                  username: Voluptatem voluptatibus qui.
                "401":
                    description: 'unauthorized: Unauthorized access'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: 'internal_error: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Nobis libero.
                            example: Magnam dolores rem.
        post:
            tags:
                - users
            summary: create user users
            description: Create a new user
            operationId: users#create user
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUserRequestBody'
                        example:
                            password: s3cr3t
                            username: alice
            responses:
                "201":
                    description: Created response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserResponseBody'
                            example:
                                id: 3112833509307211266
                                username: Fuga in numquam voluptatem est.
                "400":
                    description: 'invalid_parameters: Invalid input'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "409":
                    description: 'username_taken: Username already exists'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: 'internal_error: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Commodi rerum.
                            example: Tempora in quo.
    /users/{username}:
        delete:
            tags:
                - users
            summary: delete user users
            description: Delete a user by username
            operationId: users#delete user
            parameters:
                - name: username
                  in: path
                  description: Username of the user to delete
                  required: true
                  schema:
                    type: string
                    description: Username of the user to delete
                    example: alice
                  example: alice
            responses:
                "200":
                    description: OK response.
                "400":
                    description: 'invalid_parameters: Invalid input'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: 'unauthorized: Unauthorized access'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "403":
                    description: 'forbidden: Forbidden access'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: 'user_not_found: User not found'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: 'internal_error: Internal server error'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
    /users/auth:
        post:
            tags:
                - users
            summary: auth user users
            description: Authenticate a user with username and password
            operationId: users#auth user
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AuthUserRequestBody'
                        example:
                            password: s3cr3t
                            username: alice
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AuthUserResponseBody'
                            example:
                                token: Laboriosam sunt nostrum assumenda.
                                username: Ratione eos voluptates sunt quia.
                "400":
                    description: 'invalid_parameters: Invalid input'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: 'unauthorized: Invalid username or password'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: 'internal_error: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Quos est sit.
                            example: Cupiditate est pariatur eaque.
components:
    schemas:
        AddShareRequestBody:
            type: object
            properties:
                share:
                    type: string
                    description: One of the shares need to unlock the master key
                    example: EXAMPLEA5ZKwDn8Zotr3B+d+F+UzrcJ1Yhl2rU0
            example:
                share: EXAMPLEA5ZKwDn8Zotr3B+d+F+UzrcJ1Yhl2rU0
            required:
                - share
        AddShareResponseBody:
            type: object
            properties:
                index:
                    type: integer
                    description: The index of the share added
                    example: 5981173631579426674
                    format: int64
                unlocked:
                    type: boolean
                    description: Whether the master key has been unlocked
                    example: true
            example:
                index: 1441501921438188569
                unlocked: false
            required:
                - index
                - unlocked
        AuthUserRequestBody:
            type: object
            properties:
                password:
                    type: string
                    description: Password
                    example: s3cr3t
                username:
                    type: string
                    description: Username
                    example: alice
            example:
                password: s3cr3t
                username: alice
            required:
                - username
                - password
        AuthUserResponseBody:
            type: object
            properties:
                token:
                    type: string
                    description: JWT or session token
                    example: Maxime odit eligendi quae adipisci.
                username:
                    type: string
                    description: The username of the authenticated user
                    example: Aperiam atque quas ut quidem ex hic.
            example:
                token: Et quia sed ducimus.
                username: Ipsam quam modi at ipsum.
        CreateMasterKeyRequestBody:
            type: object
            properties:
                admin_password:
                    type: string
                    description: Admin password for key management
                    example: admin_password123!
                admin_username:
                    type: string
                    description: Admin username for key management
                    example: admin
                min_shares:
                    type: integer
                    description: Minimum number of shares required to reconstruct the key
                    example: 3
                    format: int64
                total_shares:
                    type: integer
                    description: Total number of shares to create
                    example: 5
                    format: int64
            example:
                admin_password: admin_password123!
                admin_username: admin
                min_shares: 3
                total_shares: 5
            required:
                - total_shares
                - min_shares
                - admin_username
                - admin_password
        CreateMasterKeyResponseBody:
            type: object
            properties:
                admin_username:
                    type: string
                    description: The admin user's username
                    example: admin
                shares:
                    type: array
                    items:
                        type: string
                        example: Minima nam voluptatem maiores.
                    description: The generated key shares
                    example:
                        - Eum excepturi deserunt omnis aliquam ipsam.
                        - Officia earum totam esse quaerat velit.
                        - Sint porro.
            example:
                admin_username: admin
                shares:
                    - Et corrupti culpa minus velit.
                    - Est sit dignissimos.
                    - Sint voluptas aspernatur.
        CreateUserRequestBody:
            type: object
            properties:
                password:
                    type: string
                    description: Password (hashed or plain depending on implementation)
                    example: s3cr3t
                username:
                    type: string
                    description: Username of the new user
                    example: alice
                    minLength: 3
            example:
                password: s3cr3t
                username: alice
            required:
                - username
                - password
        CreateUserResponseBody:
            type: object
            properties:
                id:
                    type: integer
                    description: Unique identifier for the user
                    example: 3149686305813338998
                    format: int64
                username:
                    type: string
                    description: The username of the created user
                    example: Aut quis.
            example:
                id: 1676119493923677123
                username: Et expedita.
        DeleteShareRequestBody:
            type: object
            properties:
                index:
                    type: integer
                    description: The index of the share to delete
                    example: 1
                    format: int64
            example:
                index: 1
            required:
                - index
        Error:
            type: object
            properties:
                fault:
                    type: boolean
                    description: Is the error a server-side fault?
                    example: true
                id:
                    type: string
                    description: ID is a unique identifier for this particular occurrence of the problem.
                    example: 123abc
                message:
                    type: string
                    description: Message is a human-readable explanation specific to this occurrence of the problem.
                    example: parameter 'p' must be an integer
                name:
                    type: string
                    description: Name is the name of this class of errors.
                    example: bad_request
                temporary:
                    type: boolean
                    description: Is the error temporary?
                    example: false
                timeout:
                    type: boolean
                    description: Is the error a timeout?
                    example: false
            description: Invalid parameters provided
            example:
                fault: true
                id: 123abc
                message: parameter 'p' must be an integer
                name: bad_request
                temporary: true
                timeout: true
            required:
                - name
                - id
                - message
                - temporary
                - timeout
                - fault
        GetKeyStatusResponseBody:
            type: object
            properties:
                current_shares:
                    type: integer
                    description: Number of shares currently held
                    example: 7926837356895559462
                    format: int64
                is_locked:
                    type: boolean
                    description: Whether the key is currently locked
                    example: false
                min_shares:
                    type: integer
                    description: Minimum number of shares required
                    example: 3875426494026184978
                    format: int64
                total_shares:
                    type: integer
                    description: Total number of shares
                    example: 2792794677446550089
                    format: int64
            example:
                current_shares: 516397163871956071
                is_locked: true
                min_shares: 5856351231608225095
                total_shares: 7638314582708536260
            required:
                - is_locked
                - current_shares
                - min_shares
                - total_shares
        GetSecretValueRequestBody:
            type: object
            properties:
                path:
                    type: string
                    description: Base64 encoded secret's path
                    example: L2N1c3RvbWVycy9nb29nbGUvYXBpX2tleQ==
                    minLength: 2
            example:
                path: L2N1c3RvbWVycy9nb29nbGUvYXBpX2tleQ==
            required:
                - path
        GetSecretValueResponseBody:
            type: object
            properties:
                path:
                    type: string
                    description: The original path of the secret
                    example: customers/google/api_key
                value:
                    type: string
                    description: The secret value
                    example: SECRET_API_KEY
            example:
                path: customers/google/api_key
                value: SECRET_API_KEY
        RoleType:
            type: object
            properties:
                id:
                    type: integer
                    description: Unique identifier for the role
                    example: 1
                    format: int64
                name:
                    type: string
                    description: Name of the role
                    example: admin
            example:
                id: 1
                name: admin
        SecretInfo:
            type: object
            properties:
                authorized_members:
                    type: array
                    items:
                        $ref: '#/components/schemas/User'
                    description: Members authorized to access the secret
                    example:
                        - created_at: Pariatur fuga.
                          updated_at: Ipsam doloribus laboriosam repudiandae.
                          username: Laborum eligendi et dolorum corporis nihil.
                        - created_at: Pariatur fuga.
                          updated_at: Ipsam doloribus laboriosam repudiandae.
                          username: Laborum eligendi et dolorum corporis nihil.
                        - created_at: Pariatur fuga.
                          updated_at: Ipsam doloribus laboriosam repudiandae.
                          username: Laborum eligendi et dolorum corporis nihil.
                        - created_at: Pariatur fuga.
                          updated_at: Ipsam doloribus laboriosam repudiandae.
                          username: Laborum eligendi et dolorum corporis nihil.
                authorized_roles:
                    type: array
                    items:
                        $ref: '#/components/schemas/RoleType'
                    description: Roles authorized to access the secret
                    example:
                        - id: 1
                          name: admin
                        - id: 1
                          name: admin
                created_at:
                    type: string
                    description: Creation timestamp of the secret
                    example: "2025-06-30T12:00:00Z"
                owner:
                    $ref: '#/components/schemas/User'
                path:
                    type: string
                    description: The original path of the secret
                    example: customers/google/api_key
                updated_at:
                    type: string
                    description: Last update timestamp of the secret
                    example: "2025-06-30T15:00:00Z"
            example:
                authorized_members:
                    - created_at: Pariatur fuga.
                      updated_at: Ipsam doloribus laboriosam repudiandae.
                      username: Laborum eligendi et dolorum corporis nihil.
                    - created_at: Pariatur fuga.
                      updated_at: Ipsam doloribus laboriosam repudiandae.
                      username: Laborum eligendi et dolorum corporis nihil.
                    - created_at: Pariatur fuga.
                      updated_at: Ipsam doloribus laboriosam repudiandae.
                      username: Laborum eligendi et dolorum corporis nihil.
                authorized_roles:
                    - id: 1
                      name: admin
                    - id: 1
                      name: admin
                    - id: 1
                      name: admin
                    - id: 1
                      name: admin
                created_at: "2025-06-30T12:00:00Z"
                owner:
                    created_at: Pariatur fuga.
                    updated_at: Ipsam doloribus laboriosam repudiandae.
                    username: Laborum eligendi et dolorum corporis nihil.
                path: customers/google/api_key
                updated_at: "2025-06-30T15:00:00Z"
        User:
            type: object
            properties:
                created_at:
                    type: string
                    description: User creation timestamp
                    example: Doloribus fugiat ut qui consequatur illum totam.
                updated_at:
                    type: string
                    description: User last update timestamp
                    example: Inventore inventore nostrum.
                username:
                    type: string
                    description: The username
                    example: Repudiandae accusantium suscipit ipsum.
            example:
                created_at: Dignissimos veniam voluptatem.
                updated_at: Et atque.
                username: Et qui.
            required:
                - username
                - created_at
                - updated_at
tags:
    - name: key_management
      description: The FishyKeys server handles master key operations
    - name: secrets
      description: User service manages user accounts and authentication
    - name: users
      description: User service manages user accounts and authentication
