// Code generated by goa v3.21.1, DO NOT EDIT.
//
// secrets gRPC server
//
// Command:
// $ goa gen github.com/Vidalee/FishyKeys/design

package server

import (
	"context"
	"errors"

	secretspb "github.com/Vidalee/FishyKeys/gen/grpc/secrets/pb"
	secrets "github.com/Vidalee/FishyKeys/gen/secrets"
	goagrpc "goa.design/goa/v3/grpc"
	goa "goa.design/goa/v3/pkg"
	"google.golang.org/grpc/codes"
)

// Server implements the secretspb.SecretsServer interface.
type Server struct {
	OperatorGetSecretValueH goagrpc.UnaryHandler
	secretspb.UnimplementedSecretsServer
}

// New instantiates the server struct with the secrets service endpoints.
func New(e *secrets.Endpoints, uh goagrpc.UnaryHandler) *Server {
	return &Server{
		OperatorGetSecretValueH: NewOperatorGetSecretValueHandler(e.OperatorGetSecretValue, uh),
	}
}

// NewOperatorGetSecretValueHandler creates a gRPC handler which serves the
// "secrets" service "operator get secret value" endpoint.
func NewOperatorGetSecretValueHandler(endpoint goa.Endpoint, h goagrpc.UnaryHandler) goagrpc.UnaryHandler {
	if h == nil {
		h = goagrpc.NewUnaryHandler(endpoint, DecodeOperatorGetSecretValueRequest, EncodeOperatorGetSecretValueResponse)
	}
	return h
}

// OperatorGetSecretValue implements the "OperatorGetSecretValue" method in
// secretspb.SecretsServer interface.
func (s *Server) OperatorGetSecretValue(ctx context.Context, message *secretspb.OperatorGetSecretValueRequest) (*secretspb.OperatorGetSecretValueResponse, error) {
	ctx = context.WithValue(ctx, goa.MethodKey, "operator get secret value")
	ctx = context.WithValue(ctx, goa.ServiceKey, "secrets")
	resp, err := s.OperatorGetSecretValueH.Handle(ctx, message)
	if err != nil {
		var en goa.GoaErrorNamer
		if errors.As(err, &en) {
			switch en.GoaErrorName() {
			case "secret_not_found":
				return nil, goagrpc.NewStatusError(codes.NotFound, err, goagrpc.NewErrorResponse(err))
			case "invalid_parameters":
				return nil, goagrpc.NewStatusError(codes.InvalidArgument, err, goagrpc.NewErrorResponse(err))
			case "unauthorized":
				return nil, goagrpc.NewStatusError(codes.Unauthenticated, err, goagrpc.NewErrorResponse(err))
			case "forbidden":
				return nil, goagrpc.NewStatusError(codes.PermissionDenied, err, goagrpc.NewErrorResponse(err))
			case "internal_error":
				return nil, goagrpc.NewStatusError(codes.Internal, err, goagrpc.NewErrorResponse(err))
			}
		}
		return nil, goagrpc.EncodeError(err)
	}
	return resp.(*secretspb.OperatorGetSecretValueResponse), nil
}
