// Code generated by goa v3.21.1, DO NOT EDIT.
//
// secrets gRPC server encoders and decoders
//
// Command:
// $ goa gen github.com/Vidalee/FishyKeys/design

package server

import (
	"context"

	secretspb "github.com/Vidalee/FishyKeys/gen/grpc/secrets/pb"
	secrets "github.com/Vidalee/FishyKeys/gen/secrets"
	goagrpc "goa.design/goa/v3/grpc"
	"google.golang.org/grpc/metadata"
)

// EncodeOperatorGetSecretValueResponse encodes responses from the "secrets"
// service "operator get secret value" endpoint.
func EncodeOperatorGetSecretValueResponse(ctx context.Context, v any, hdr, trlr *metadata.MD) (any, error) {
	result, ok := v.(*secrets.OperatorGetSecretValueResult)
	if !ok {
		return nil, goagrpc.ErrInvalidType("secrets", "operator get secret value", "*secrets.OperatorGetSecretValueResult", v)
	}
	resp := NewProtoOperatorGetSecretValueResponse(result)
	return resp, nil
}

// DecodeOperatorGetSecretValueRequest decodes requests sent to "secrets"
// service "operator get secret value" endpoint.
func DecodeOperatorGetSecretValueRequest(ctx context.Context, v any, md metadata.MD) (any, error) {
	var (
		message *secretspb.OperatorGetSecretValueRequest
		ok      bool
	)
	{
		if message, ok = v.(*secretspb.OperatorGetSecretValueRequest); !ok {
			return nil, goagrpc.ErrInvalidType("secrets", "operator get secret value", "*secretspb.OperatorGetSecretValueRequest", v)
		}
		if err := ValidateOperatorGetSecretValueRequest(message); err != nil {
			return nil, err
		}
	}
	var payload *secrets.OperatorGetSecretValuePayload
	{
		payload = NewOperatorGetSecretValuePayload(message)
	}
	return payload, nil
}
