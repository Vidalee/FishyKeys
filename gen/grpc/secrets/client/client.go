// Code generated by goa v3.21.1, DO NOT EDIT.
//
// secrets gRPC client
//
// Command:
// $ goa gen github.com/Vidalee/FishyKeys/design

package client

import (
	"context"

	secretspb "github.com/Vidalee/FishyKeys/gen/grpc/secrets/pb"
	goagrpc "goa.design/goa/v3/grpc"
	goapb "goa.design/goa/v3/grpc/pb"
	goa "goa.design/goa/v3/pkg"
	"google.golang.org/grpc"
)

// Client lists the service endpoint gRPC clients.
type Client struct {
	grpccli secretspb.SecretsClient
	opts    []grpc.CallOption
}

// NewClient instantiates gRPC client for all the secrets service servers.
func NewClient(cc *grpc.ClientConn, opts ...grpc.CallOption) *Client {
	return &Client{
		grpccli: secretspb.NewSecretsClient(cc),
		opts:    opts,
	}
}

// OperatorGetSecretValue calls the "OperatorGetSecretValue" function in
// secretspb.SecretsClient interface.
func (c *Client) OperatorGetSecretValue() goa.Endpoint {
	return func(ctx context.Context, v any) (any, error) {
		inv := goagrpc.NewInvoker(
			BuildOperatorGetSecretValueFunc(c.grpccli, c.opts...),
			EncodeOperatorGetSecretValueRequest,
			DecodeOperatorGetSecretValueResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault("%s", err.Error())
			}
		}
		return res, nil
	}
}
