// Code generated by goa v3.21.1, DO NOT EDIT.
//
// fishykeys endpoints
//
// Command:
// $ goa gen github.com/Vidalee/FishyKeys/backend/design

package fishykeys

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "fishykeys" service endpoints.
type Endpoints struct {
	CreateMasterKey goa.Endpoint
	GetKeyStatus    goa.Endpoint
}

// NewEndpoints wraps the methods of the "fishykeys" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		CreateMasterKey: NewCreateMasterKeyEndpoint(s),
		GetKeyStatus:    NewGetKeyStatusEndpoint(s),
	}
}

// Use applies the given middleware to all the "fishykeys" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.CreateMasterKey = m(e.CreateMasterKey)
	e.GetKeyStatus = m(e.GetKeyStatus)
}

// NewCreateMasterKeyEndpoint returns an endpoint function that calls the
// method "create_master_key" of service "fishykeys".
func NewCreateMasterKeyEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*CreateMasterKeyPayload)
		return s.CreateMasterKey(ctx, p)
	}
}

// NewGetKeyStatusEndpoint returns an endpoint function that calls the method
// "get_key_status" of service "fishykeys".
func NewGetKeyStatusEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return s.GetKeyStatus(ctx)
	}
}
