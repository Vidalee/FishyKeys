// Code generated by goa v3.21.1, DO NOT EDIT.
//
// fishykeys client
//
// Command:
// $ goa gen github.com/Vidalee/FishyKeys/backend/design

package fishykeys

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "fishykeys" service client.
type Client struct {
	CreateMasterKeyEndpoint goa.Endpoint
	GetKeyStatusEndpoint    goa.Endpoint
}

// NewClient initializes a "fishykeys" service client given the endpoints.
func NewClient(createMasterKey, getKeyStatus goa.Endpoint) *Client {
	return &Client{
		CreateMasterKeyEndpoint: createMasterKey,
		GetKeyStatusEndpoint:    getKeyStatus,
	}
}

// CreateMasterKey calls the "create_master_key" endpoint of the "fishykeys"
// service.
// CreateMasterKey may return the following errors:
//   - "invalid_parameters" (type InvalidParameters)
//   - "internal_error" (type InternalError)
//   - "key_already_exists" (type KeyAlreadyExists)
//   - error: internal error
func (c *Client) CreateMasterKey(ctx context.Context, p *CreateMasterKeyPayload) (res *CreateMasterKeyResult, err error) {
	var ires any
	ires, err = c.CreateMasterKeyEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CreateMasterKeyResult), nil
}

// GetKeyStatus calls the "get_key_status" endpoint of the "fishykeys" service.
// GetKeyStatus may return the following errors:
//   - "no_key_set" (type NoKeySet)
//   - "internal_error" (type InternalError)
//   - error: internal error
func (c *Client) GetKeyStatus(ctx context.Context) (res *GetKeyStatusResult, err error) {
	var ires any
	ires, err = c.GetKeyStatusEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(*GetKeyStatusResult), nil
}
